// Mocks generated by Mockito 5.4.4 from annotations
// in motels/test/features/main/home/view/widgets/motel_carrousel_item/period_item_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:motels/models/complementary_motel_models.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PeriodModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPeriodModel extends _i1.Mock implements _i2.PeriodModel {
  MockPeriodModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get formattedTime => (super.noSuchMethod(
        Invocation.getter(#formattedTime),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#formattedTime),
        ),
      ) as String);

  @override
  String get time => (super.noSuchMethod(
        Invocation.getter(#time),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#time),
        ),
      ) as String);

  @override
  double get price => (super.noSuchMethod(
        Invocation.getter(#price),
        returnValue: 0.0,
      ) as double);

  @override
  double get totalPrice => (super.noSuchMethod(
        Invocation.getter(#totalPrice),
        returnValue: 0.0,
      ) as double);

  @override
  bool get hasCourtesy => (super.noSuchMethod(
        Invocation.getter(#hasCourtesy),
        returnValue: false,
      ) as bool);
}
